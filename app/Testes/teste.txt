import React, { useState } from 'react';
import { View, Text, TextInput, Button, TouchableOpacity, ScrollView } from 'react-native'; 
import { Picker } from '@react-native-picker/picker'; // dropdown picker
import form from "./form";

type Exercise = {
  muscleGroup: string;
  reps: string;
  weight: string;
  isChecked: boolean;
};

export default function AdicionarPlanejamento() {
  
  const [exercises, setExercises] = useState<Exercise[]>([]);
  const [muscleGroup, setMuscleGroup] = useState('');
  const [reps, setReps] = useState('');
  const [weight, setWeight] = useState('');
  const [formVisible, setFormVisible] = useState(false);

  const handleAddExercise = () => {
    setExercises([
      ...exercises,
      { muscleGroup: '', reps: '', weight: '', isChecked: false }
    ]);
  };

  const handleUpdateExercise = <K extends keyof Exercise>(
    index: number,
    key: K,
    value: Exercise[K]
  ) => {
    const updated = [...exercises];
    updated[index] = {
      ...updated[index],
      [key]: value
    };
    setExercises(updated);
  };

  return (
    <ScrollView style={form.scrollContainer}>
      <View style={form.container}>
      <Text style={form.title}>Adicionar Planejamento</Text>
      <Button title="Adicionar Exercício" onPress={() => {
        setFormVisible(true);
        handleAddExercise();
      }} />
      {formVisible && exercises.map((exercise, index) => (
        <View key={index} style={form.card}>
          <Text style={form.label}>Grupo Muscular:</Text>
          <Picker
            selectedValue={exercise.muscleGroup}
            onValueChange={(itemValue) => handleUpdateExercise(index, 'muscleGroup', itemValue)}
            style={form.picker}
          >
            <Picker.Item label="Selecione..." value="" />
            <Picker.Item label="Peito" value="peito" />
            <Picker.Item label="Costas" value="costas" />
            <Picker.Item label="Pernas" value="pernas" />
            <Picker.Item label="Braços" value="bracos" />
          </Picker>

          <Text style={form.label}>Repetições:</Text>
          <TextInput
            keyboardType="numeric"
            value={exercise.reps}
            onChangeText={(text) => handleUpdateExercise(index, 'reps', text)}
            style={form.input}
          />

          <Text style={form.label}>Peso (kg):</Text>
          <TextInput
            keyboardType="numeric"
            value={exercise.weight}
            onChangeText={(text) => handleUpdateExercise(index, 'weight', text)}
            style={form.input}
          />

          <View style={form.checkboxContainer}>
            <Checkbox
              value={exercise.isChecked}
              onValueChange={(newValue) => handleUpdateExercise(index, 'isChecked', newValue)}
              color={exercise.isChecked ? '#007bff' : undefined}
            />
            <Text style={form.checkboxLabel}>Aquecimento</Text>
          </View>
        </View>
      ))}

      {formVisible && (
        <TouchableOpacity
          style={form.addButton}
          onPress={handleAddExercise}
        >
          <Text style={form.addButtonText}>Adicionar outro exercício</Text>
        </TouchableOpacity>
      )}
      </View>
    </ScrollView>
  );
}



const [exercises, setExercises] = useState<Exercise[]>([
    { exercicio: '', series: '', weight: '', isChecked: false }
  ]);

  const [open, setOpen] = useState(false);
  const [value, setValue] = useState<string | null>(exercises[0]?.exercicio || null);
  const [items, setItems] = useState([
    { label: 'Peito', value: 'chest' },
    { label: 'Costas', value: 'back' },
    { label: 'Pernas', value: 'legs' },
    { label: 'Ombros', value: 'shoulders' },
    { label: 'Bíceps', value: 'biceps' },
    { label: 'Tríceps', value: 'triceps' },
    { label: 'Abdômen', value: 'abs' },
  ]);

  const handleUpdateExercise = <K extends keyof Exercise>(
    index: number,
    key: K,
    value: Exercise[K]
  ) => {
    const updated = [...exercises];
    updated[index] = { ...updated[index], [key]: value };
    setExercises(updated);
  };

  const onSubmit = (data: FormData) => {
    // lógica de envio
    console.log("Formulário enviado:", data);
  };